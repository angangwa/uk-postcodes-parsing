name: Test

on:
  push:
    paths:
      - 'tests/**'
      - 'src/uk_postcodes_parsing/**'
  workflow_dispatch:

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ["3.8", "3.9", "3.10", "3.11"]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install .
          pip install black pytest pandas
      - name: Lint check with black
        run: |
          black src/uk_postcodes_parsing/ --check --exclude src/uk_postcodes_parsing/postcodes_nov_2024.py
      - name: Run core tests
        run: |
          pytest tests/test_all.py -v
      - name: Run new functionality tests (mocked)
        run: |
          pytest tests/test_database_manager.py tests/test_postcode_database.py tests/test_spatial_queries.py tests/test_api_functions.py tests/test_integration.py tests/test_backward_compatibility.py -v

  database-integration:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        python-version: ["3.10"]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install .
          pip install pytest
      - name: Test cross-platform database setup
        run: |
          python test_database_setup.py
      - name: Test database functionality
        run: |
          pytest tests/test_api_functions.py tests/test_integration.py -v -k "not mock"
